plugins {
    id 'maven'
    id 'maven-publish'
    id 'java'
    id 'groovy'
    id 'idea'
    id 'jacoco' // Currently this does not exclude methods generated via Annotations (toString in this plugin)
    id 'java-gradle-plugin'
    id "com.gradle.plugin-publish" version "0.10.0"
    id "com.jfrog.bintray" version "1.8.4"
    id 'net.researchgate.release' version '2.7.0'
    id 'com.github.ben-manes.versions' version '0.20.0'
    id 'org.jetbrains.kotlin.jvm' version '1.2.71'
    id 'com.dorongold.task-tree' version '1.3'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://dl.bintray.com/gigasproule/maven'
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

group = 'com.benjaminsproule'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        println(sourceSets.test.runtimeClasspath.asPath)
        file("${outputDir}/plugin-classpath.txt").text = (sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath).join("\n")
    }
}

dependencies {
    def jacksonVersion = '2.9.7'
    def springVersion = '5.1.0.RELEASE'
    def kotlinVersion = '1.2.71'

    compile gradleApi()
    compile localGroovy()

    compile 'commons-io:commons-io:2.6'
    compile 'org.apache.commons:commons-lang3:3.8.1'
    compile 'org.apache.commons:commons-text:1.4'
    compile 'com.github.jknack:handlebars:4.1.0'
    compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    compile "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:${jacksonVersion}"
    compile 'javax.xml.bind:jaxb-api:2.3.0'

    //These should be pinned here until reflections/reflections#194 has been resolved
    compile 'io.swagger:swagger-jersey2-jaxrs:1.5.13'

    compile 'javax.ws.rs:javax.ws.rs-api:2.1.1'
    compile 'com.sun.jersey:jersey-server:1.19.4'
    compile "org.springframework:spring-context:${springVersion}"
    compile "org.springframework:spring-web:${springVersion}"

    testCompile gradleTestKit()

    testCompile "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
    testCompile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    testCompile 'cglib:cglib-nodep:3.2.8'
    testCompile 'org.objenesis:objenesis:2.6'
    testCompile('org.spockframework:spock-core:1.2-groovy-2.4') {
        //We want to depend on the gradle version of groovy since this is a plugin
        exclude module: 'groovy-all'
    }

    testRuntime files(createClasspathManifest)
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

test {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
    options {
        systemProperties(System.getProperties())
    }
}

compileTestJava.dependsOn compileTestGroovy
compileTestJava.classpath += files(compileTestGroovy.destinationDir)

compileTestGroovy.dependsOn = compileTestGroovy.taskDependencies.getDependencies(compileTestGroovy) - compileTestJava
compileTestKotlin.dependsOn compileTestGroovy
compileTestKotlin.classpath += files(compileTestGroovy.destinationDir)
testClasses.dependsOn tasks.compileTestKotlin

if (project.hasProperty('bintray_user') && project.hasProperty('bintray_apiKey')) {
    bintray {
        user = bintray_user
        key = bintray_apiKey

        configurations = ['archives']
        pkg {
            repo = 'maven'
            name = 'swagger-gradle-plugin'
            websiteUrl = 'https://github.com/gigaSproule/swagger-gradle-plugin'
            vcsUrl = 'https://github.com/gigaSproule/swagger-gradle-plugin'
            githubRepo = 'gigaSproule/swagger-gradle-plugin'
            githubReleaseNotesFile = 'README.md'
            licenses = ['Apache-2.0']
            publish = true
            version {
                name = project.version
                released = new Date()
            }
        }
    }

    afterReleaseBuild.dependsOn bintrayUpload
}

pluginBundle {
    website = 'https://github.com/gigaSproule/swagger-gradle-plugin'
    vcsUrl = 'https://github.com/gigaSproule/swagger-gradle-plugin'
    description = 'Plugin to create Swagger documentation using Gradle'
    tags = ['swagger', 'documentation']

    plugins {
        swagger {
            id = 'com.benjaminsproule.swagger'
            displayName = 'Swagger Gradle Plugin'
        }
    }
}

publishing {
    publications {
        pluginPublication(MavenPublication) {
            from components.java
            groupId project.group
            artifactId project.name
            version "${project.version}-SNAPSHOT"
        }
    }
}

tasks.jacocoTestReport.dependsOn('test')
tasks.check.dependsOn('jacocoTestReport')

jacoco {
    toolVersion = '0.8.2'
}

afterReleaseBuild.dependsOn publishPlugins
